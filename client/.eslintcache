[{"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\App.js":"2","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Maincomponent.js":"3","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\Collect.js":"4","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\train.js":"5","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\Trainedmodel.js":"6","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\redux\\configureStore.js":"7","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Header.js":"8","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Learn.js":"9","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\ClassifyAll.js":"10","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\loginButton.js":"11","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\redux\\authReducer.js":"12","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Leaderboard.js":"13","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Clock.js":"14","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Home.js":"15","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\redux\\ActionCreator.js":"16","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\NextButton.js":"17","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\redux\\ActionTypes.js":"18","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\shared\\baseUrl.js":"19","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Detection.js":"20","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Footer.js":"21"},{"size":379,"mtime":1616082982700,"results":"22","hashOfConfig":"23"},{"size":653,"mtime":1615782329027,"results":"24","hashOfConfig":"23"},{"size":1507,"mtime":1616182727149,"results":"25","hashOfConfig":"23"},{"size":5094,"mtime":1615781287926,"results":"26","hashOfConfig":"23"},{"size":458,"mtime":1615781287942,"results":"27","hashOfConfig":"28"},{"size":5442,"mtime":1615783289820,"results":"29","hashOfConfig":"28"},{"size":378,"mtime":1616084004541,"results":"30","hashOfConfig":"23"},{"size":9005,"mtime":1615779103101,"results":"31","hashOfConfig":"23"},{"size":4280,"mtime":1616219016305,"results":"32","hashOfConfig":"23"},{"size":6324,"mtime":1616182613728,"results":"33","hashOfConfig":"23"},{"size":1298,"mtime":1616083779946,"results":"34","hashOfConfig":"23"},{"size":1491,"mtime":1615778463548,"results":"35","hashOfConfig":"23"},{"size":5391,"mtime":1616182631764,"results":"36","hashOfConfig":"23"},{"size":1815,"mtime":1615047819137,"results":"37","hashOfConfig":"23"},{"size":1291,"mtime":1616182572269,"results":"38","hashOfConfig":"23"},{"size":1991,"mtime":1616084019752,"results":"39","hashOfConfig":"23"},{"size":1178,"mtime":1615782529616,"results":"40","hashOfConfig":"23"},{"size":421,"mtime":1615392575577,"results":"41","hashOfConfig":"23"},{"size":50,"mtime":1615787818026,"results":"42","hashOfConfig":"23"},{"size":3982,"mtime":1616134705628,"results":"43","hashOfConfig":"23"},{"size":823,"mtime":1616218951777,"results":"44","hashOfConfig":"23"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1rdwdlh",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"17hw2yg",{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\index.js",[],["94","95"],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\App.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Maincomponent.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\Collect.js",["96","97","98","99","100","101"],"import React, { useCallback } from 'react';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport * as ml5 from 'ml5';\r\nimport Webcam from 'react-webcam';\r\nlet options = {\r\n  inputs: 34,\r\n  outputs: ['label'],\r\n  task: 'classification',\r\n  debug: true,\r\n};\r\n// const brain = ml5.neuralNetwork(options);\r\n/* brain.loadData(\"../testdata.json\", ()=>{\r\n          brain.normalizeData();\r\n \t\tbrain.train({ epochs: 50 }, ()=>{\r\n             console.log'x(\"model trained\");\r\n \t\t\t\t\t\tbrain.save();\r\n         });\r\n });*/\r\nfunction Collect() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [loaded, Setloaded] = useState(false);\r\n  const brain = useRef(null);\r\n  const [poses, Setposes] = useState([]);\r\n  const [swap, Setswap] = useState(true);\r\n  const [facing, Setfacing] = useState(false);\r\n  const [collecting, Setcollecting] = useState(false);\r\n  const [targetLabel, Setlabel] = useState('');\r\n\r\n  const drawRect = (poses, ctx) => {\r\n    const pose = poses[0].pose;\r\n    const skeleton = poses[0].skeleton;\r\n    for (let i = 0; i < pose.keypoints.length; i++) {\r\n      let x = pose.keypoints[i].position.x;\r\n      let y = pose.keypoints[i].position.y;\r\n      ctx.fillStyle = ' #39ff14';\r\n      ctx.beginPath();\r\n      ctx.arc(x, y, 6, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n      ctx.fillStyle = '#fff';\r\n      ctx.beginPath();\r\n      ctx.arc(x, y, 4, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n    }\r\n    for (let j = 0; j < poses[0].skeleton.length; j++) {\r\n      let partA = skeleton[j][0];\r\n      let partB = skeleton[j][1];\r\n      ctx.beginPath();\r\n      ctx.moveTo(partA.position.x, partA.position.y);\r\n      ctx.lineTo(partB.position.x, partB.position.y);\r\n      ctx.strokeStyle = ' #39ff14';\r\n\r\n      ctx.stroke();\r\n    }\r\n  };\r\n  const detection = () => {\r\n    const poseNet = ml5.poseNet(webcamRef.current.video, () => {\r\n      console.log('Modal Loaded');\r\n\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      poseNet.on('pose', (poses) => {\r\n        if (poses.length > 0) {\r\n          Setposes(poses);\r\n        }\r\n      });\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    brain.current = ml5.neuralNetwork(options);\r\n\r\n    detection();\r\n  }, []);\r\n\r\n  if (poses.length > 0) {\r\n    if (collecting) {\r\n      const pose = poses[0].pose;\r\n      let inputs = [];\r\n      for (let i = 0; i < pose.keypoints.length; i++) {\r\n        let x = pose.keypoints[i].position.x;\r\n        let y = pose.keypoints[i].position.y;\r\n        inputs.push(x);\r\n        inputs.push(y);\r\n      }\r\n      let target = {\r\n        label: targetLabel,\r\n      };\r\n      brain.current.addData(inputs, target);\r\n    }\r\n    const ctx = canvasRef.current.getContext('2d');\r\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n    requestAnimationFrame(() => {\r\n      drawRect(poses, ctx);\r\n    });\r\n  }\r\n  const collecttrain = () => {\r\n    setTimeout(() => {\r\n      Setcollecting(true);\r\n      console.log('Collecting');\r\n      setTimeout(() => {\r\n        Setcollecting(false);\r\n        console.log('Stop Collecting');\r\n      }, 20000);\r\n    }, 5000);\r\n  };\r\n  const savedata = () => {\r\n    brain.current.saveData();\r\n  };\r\n  return (\r\n    <div>\r\n      <div className='h-screen overflow-hidden'>\r\n        <Webcam\r\n          ref={webcamRef}\r\n          muted={true}\r\n          style={{\r\n            transform: swap && 'scaleX(-1)',\r\n            position: 'absolute',\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: 'center',\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            transform: swap && 'scaleX(-1)',\r\n            position: 'absolute',\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: 'center',\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n        <input\r\n          type='text'\r\n          name='label'\r\n          className=' border-black border-2'\r\n          onChange={(e) => Setlabel(e.target.value)}\r\n        />\r\n\r\n        <div\r\n          className='inline-block px-3 py-2 rounded-xl cursor-pointer bg-yellow-400 text-lg text-black'\r\n          onClick={() => savedata()}\r\n        >\r\n          Save\r\n        </div>\r\n        <div\r\n          className='inline-block px-3 py-2 rounded-xl cursor-pointer bg-yellow-400 text-lg text-black'\r\n          onClick={() => collecttrain()}\r\n        >\r\n          Train\r\n        </div>\r\n        <p className='text-3xl text-black'>\r\n          {collecting ? ' Collecting ' : 'Not Collecting'}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Collect;\r\n","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\train.js",[],["102","103"],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\Trainedmodel.js",["104","105","106"],"import React from 'react';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport * as ml5 from 'ml5';\r\nimport Webcam from 'react-webcam';\r\nlet options = {\r\n  inputs: 34,\r\n  outputs: ['label'],\r\n  task: 'classification',\r\n  debug: true,\r\n};\r\n\r\nconst modelInfo = {\r\n  model: './model/finalmodel.json',\r\n  metadata: './model/finalmodel_meta.json',\r\n  weights: './model/finalmodel.weights.bin',\r\n};\r\nfunction Trainedmodel() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [poses, Setposes] = useState([]);\r\n  const [swap, Setswap] = useState(true);\r\n  const [facing, Setfacing] = useState(false);\r\n  const [resultspose, Setresultspose] = useState([]);\r\n  const brain = useRef(null);\r\n  const drawRect = (poses, ctx) => {\r\n    // ctx.drawImage(webcamRef.current.video, 0, 0);\r\n    const pose = poses[0].pose;\r\n    const skeleton = poses[0].skeleton;\r\n    for (let i = 0; i < pose.keypoints.length; i++) {\r\n      let x = pose.keypoints[i].position.x;\r\n      let y = pose.keypoints[i].position.y;\r\n      ctx.fillStyle = ' #39ff14';\r\n      ctx.beginPath();\r\n      ctx.arc(x, y, 6, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n      ctx.fillStyle = '#fff';\r\n      ctx.beginPath();\r\n      ctx.arc(x, y, 4, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n    }\r\n    for (let j = 0; j < poses[0].skeleton.length; j++) {\r\n      let partA = skeleton[j][0];\r\n      let partB = skeleton[j][1];\r\n      ctx.beginPath();\r\n      ctx.moveTo(partA.position.x, partA.position.y);\r\n      ctx.lineTo(partB.position.x, partB.position.y);\r\n      ctx.strokeStyle = ' #39ff14';\r\n\r\n      ctx.stroke();\r\n    }\r\n    // ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n  };\r\n  const detection = () => {\r\n    const poseNet = ml5.poseNet(webcamRef.current.video, () => {\r\n      console.log('Modal Loaded');\r\n      brain.current.load(modelInfo, () => {\r\n        console.log('pose classification ready!');\r\n      });\r\n\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n      poseNet.on('pose', (poses) => {\r\n        if (poses.length > 0) {\r\n          Setposes(poses);\r\n          classifyPose(poses);\r\n        }\r\n      });\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    brain.current = ml5.neuralNetwork(options);\r\n    detection();\r\n  }, []);\r\n  const classifyPose = (poses) => {\r\n    const pose = poses[0].pose;\r\n    let inputs = [];\r\n    for (let i = 0; i < pose.keypoints.length; i++) {\r\n      let x = pose.keypoints[i].position.x;\r\n      let y = pose.keypoints[i].position.y;\r\n      inputs.push(x);\r\n      inputs.push(y);\r\n    }\r\n    brain.current.classify(inputs, (error, results) => {\r\n      // console.log(results[0]);\r\n      if (error) {\r\n        console.log(error);\r\n      } else {\r\n        Setresultspose(results);\r\n        console.log(results[0].label, results[0].confidence);\r\n      }\r\n      //console.log(results[0].confidence);\r\n    });\r\n  };\r\n\r\n  if (poses.length > 0) {\r\n    // classifyPose(poses);\r\n    const ctx = canvasRef.current.getContext('2d');\r\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n    requestAnimationFrame(() => {\r\n      drawRect(poses, ctx);\r\n    });\r\n  }\r\n  const videoConstraints = {\r\n    facingMode: facing ? { exact: 'environment' } : 'user',\r\n  };\r\n  // if (targetLabel != \"\") {\r\n  // \t\t\tconsole.log(targetLabel);\r\n  // \t\t}\r\n  // console.log(collecting);\r\n  return (\r\n    <div>\r\n      <div className='h-screen overflow-hidden'>\r\n        <Webcam\r\n          videoConstraints={videoConstraints}\r\n          ref={webcamRef}\r\n          src='youtube.com/watch?v=t4EFxQDhA8A'\r\n          muted={true}\r\n          style={{\r\n            transform: swap && 'scaleX(-1)',\r\n            position: 'absolute',\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: 'center',\r\n            zindex: 9,\r\n          }}\r\n        />\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            transform: swap && 'scaleX(-1)',\r\n            position: 'absolute',\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: 'center',\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n        {/* <input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"label\"\r\n\t\t\t\t\tclassName=\" border-black border-2\"\r\n\t\t\t\t\tonChange={(e) => Setlabel(e.target.value)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"inline-block px-3 py-2 rounded-xl cursor-pointer bg-yellow-400 text-lg text-black\"\r\n\t\t\t\t\tonClick={() => savedata()}\r\n\t\t\t\t>\r\n\t\t\t\t\tSave\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"inline-block px-3 py-2 rounded-xl cursor-pointer bg-yellow-400 text-lg text-black\"\r\n\t\t\t\t\tonClick={() => collecttrain()}\r\n\t\t\t\t>\r\n\t\t\t\t\tTrain\r\n\t\t\t\t</div> */}\r\n        {/* <div\r\n\t\t\t\t\t\tclassName=\"inline-block absolute bottom-0 right-0 px-3 py-2 rounded-xl cursor-pointer bg-yellow-400 text-lg text-black\"\r\n\t\t\t\t\t\tonClick={() => Setfacing(!facing)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{facing ? \"Front\" : \"Back\"}\r\n\t\t\t\t\t</div> */}\r\n        {resultspose.length > 0 && (\r\n          <div className='text-2xl text-black'>\r\n            {resultspose[0].label}\r\n            {resultspose[0].confidence}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Trainedmodel;\r\n","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\redux\\configureStore.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Header.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Learn.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\ClassifyAll.js",["107"],"import { useEffect, useState } from 'react';\r\nimport Confetti from 'react-confetti';\r\nimport Loader from 'react-loader-spinner';\r\nimport keepit from '../images/keepit.png';\r\nimport Running from '../images/WealthyNaiveHorseshoecrab-max-1mb.gif';\r\nimport StopRunning from '../images/Stop_running.png';\r\nimport './practice.css';\r\nimport Detection from './Detection';\r\nimport Clock from './Clock';\r\nimport NextButton from './NextButton';\r\nimport axios from 'axios';\r\nimport {  useSelector } from 'react-redux';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { ConfigureStore } from '../redux/configureStore';\r\n\r\nfunction ClassifyAll({ type, level }) {\r\n  const [starting, Setstarting] = useState(false);\r\n  const [modelloading, Setmodelloading] = useState(true);\r\n  const [doingright, Setdoingright] = useState(false);\r\n  const [classifying, Setclassifying] = useState(false);\r\n  const [completed, Setcompleted] = useState(false);\r\n  const [next, Setnext] = useState(false);\r\n\r\n  const state = useSelector((state) => state);\r\n  const levelis = type !=='practice'? state.auth.level : 1;\r\n  const levels = [\r\n\t\t\"tadasana\",\r\n\t\t\"vrikshasana\",\r\n\t\t\"Kursiasana\",\r\n\t\t\"Virabhadrasana\"\r\n\t];\r\n  const youtubeUrl = [\r\n\t\t\"https://youtu.be/2HTvZp5rPrg\",\r\n\t\t\"https://youtu.be/Dic293YNJI8\",\r\n\t\t\"https://youtu.be/4xyTmX_OMiM\",\r\n\t\t\"https://youtu.be/fiOXtyjQzY8\",\r\n\t];\r\n  const IntialCompleted = () => {\r\n    Setclassifying(true);\r\n  };\r\n  const pause = () => {\r\n    return !doingright;\r\n  };\r\n  const whatdoing = () => {\r\n    return doingright;\r\n  };\r\n  const updatelevel = (user) => {\r\n    const token = localStorage.getItem('token');\r\n    return axios\r\n      .post(\r\n        baseUrl + 'updatelevel',\r\n        { user },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        var newlevel = response.data.level;\r\n        localStorage.setItem('level', newlevel);\r\n        console.log(localStorage.getItem('level'));\r\n        state.auth.level = newlevel;\r\n        localStorage.setItem(\"creds\", JSON.stringify(state.auth));\r\n        console.log(JSON.parse(localStorage.getItem(\"creds\")));\r\n\r\n\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  const Finished = () => {\r\n     if(type!==\"practice\")\r\n    updatelevel(state.auth);\r\n    Setcompleted(true);\r\n    Setclassifying(false);\r\n  };\r\n\r\n  const Startbutton = () => {\r\n    if (!starting && !classifying && !completed) {\r\n      return (\r\n        <div\r\n          className='text-secondary-dark text-2xl text-jost bg-secondary px-4 py-2 rounded-full shadow-xl transition ease-in-out duration-150 hover:bg-secondary-dark hover:text-secondary cursor-pointer'\r\n          onClick={() => Setstarting(true)}\r\n        >\r\n          START\r\n        </div>\r\n      );\r\n    } else if (starting && !classifying && !completed) {\r\n      return (\r\n        <div>\r\n          <span className='text-xl text-primary font-bold text-jost'>\r\n            Starting in\r\n          </span>\r\n          <Clock total={5} pause={() => false} onComplete={IntialCompleted} />\r\n        </div>\r\n      );\r\n    } else if (starting && classifying && !completed) {\r\n      return (\r\n\t\t\t\t<div className=\"flex-col justify-center ml-5\">\r\n\t\t\t\t\t<Clock total={0} pause={pause} onComplete={Finished} />\r\n\t\t\t\t\t<span className=\"text-xl text-primary text-center font-bold text-jost\">\r\n\t\t\t\t\t\t{doingright ? \"Doing Great\" : \"Keep Trying\"}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n    } else if (completed && !next) {\r\n      return (\r\n        <Confetti\r\n          width={window.innerWidth}\r\n          height={window.innerHeight}\r\n          numberOfPieces={50}\r\n          recycle={false}\r\n          onConfettiComplete={() => Setnext(true)}\r\n        />\r\n      );\r\n    } else if (next) {\r\n      return (\r\n        <div>\r\n          <NextButton type={type} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  useEffect(() => {}, []);\r\n  const Modelcheck = (val) => {\r\n    Setdoingright(val);\r\n  };\r\n  const Classifying = () => {\r\n    return classifying;\r\n  };\r\n  return (\r\n\t\t<div\r\n\t\t\tclassName=\"flex flex-col w-full h-full bg-primary-light overflow-hidden overflow-y-hidden\"\r\n\t\t\tstyle={{ \"min-height\": \"91vh\" }}\r\n\t\t>\r\n\t\t\t{modelloading && (\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"absolute w-full bg-primary-light z-50 overflow-hidden \"\r\n\t\t\t\t\tstyle={{ height: \"90vh\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"flex flex-col justify-center items-center h-full\">\r\n\t\t\t\t\t\t<Loader\r\n\t\t\t\t\t\t\ttype=\"Circles\"\r\n\t\t\t\t\t\t\tcolor=\"#424874\"\r\n\t\t\t\t\t\t\theight={100}\r\n\t\t\t\t\t\t\twidth={100}\r\n\t\t\t\t\t\t\t//3 secs\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span className=\"text-base font-jost \">\r\n\t\t\t\t\t\t\tIf taking more time than might be you have blocked the camera\r\n\t\t\t\t\t\t\taccess!\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div className=\" w-full h-full lg:flex\">\r\n\t\t\t\t<div className=\"w-full  h-full lg:w-1/2 \">\r\n\t\t\t\t\t<Detection\r\n\t\t\t\t\t\tSetmodelloading={Setmodelloading}\r\n\t\t\t\t\t\tSetdoingright={Modelcheck}\r\n\t\t\t\t\t\tClassifying={Classifying}\r\n\t\t\t\t\t\twhatdoing={whatdoing}\r\n\t\t\t\t\t\tasana={levels[levelis - 1]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"w-full lg:w-1/2 h-full relative  \">\r\n\t\t\t\t\t<div className=\"text-2xl text-jost font-bold text-secondary-dark w-full flex justify-center \">\r\n\t\t\t\t\t\tPerform same as shown below\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"  flex justify-center items-center \">\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\tclassName=\"text-2xl font-jost text-secondary-dark font-bold uppercase mt-1 flex\"\r\n\t\t\t\t\t\t\thref={youtubeUrl[levelis - 1]}\r\n\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\trel=\"noreferrer\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc=\"https://img.icons8.com/doodle/32/000000/youtube-play--v2.png\"\r\n\t\t\t\t\t\t\t\talt=\"Youtube\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{levels[levelis - 1]}\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"  flex justify-center items-center \">\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={`${baseUrl}data/images/${levels[levelis - 1]}.jpg`}\r\n\t\t\t\t\t\t\talt=\"...\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={keepit}\r\n\t\t\t\t\t\tclassName=\"absolute bottom-0 right-0 keep_img\"\r\n\t\t\t\t\t\talt=\"..\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{starting && !completed && (\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={doingright ? Running : StopRunning}\r\n\t\t\t\t\t\t\tclassName=\"absolute bottom-0 left-0 keep_img\"\r\n\t\t\t\t\t\t\talt=\"...\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div className=\"flex justify-center w-full\">\r\n\t\t\t\t\t\t<Startbutton />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ClassifyAll;\r\n","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\loginButton.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\redux\\authReducer.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Leaderboard.js",["108","109"],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Clock.js",["110","111"],"import { useEffect,memo } from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./clock.css\";\r\n\r\nconst Clock = ({ total, pause, onComplete }) => {\r\n\tconst [time, Settime] = useState(total);\r\n\tuseEffect(() => {\r\n\t\tif (time === 0) {\r\n            onComplete();\r\n            return;\r\n        };\r\n\t\tif (pause()) return;\r\n\t\tlet timer = setInterval(() => {\r\n\t\t\tSettime(time - 1);\r\n\t\t\tsetCircleDasharray();\r\n\t\t}, 1000);\r\n\t\treturn () => {\r\n\t\t\tclearInterval(timer);\r\n\t\t};\r\n\t}, [time, pause()]);\r\n\tfunction setCircleDasharray() {\r\n\t\tconst circleDasharray = `${(calculateTimeFraction() * 283).toFixed(0)} 283`;\r\n\t\tdocument\r\n\t\t\t.getElementById(\"base-timer-path-remaining\")\r\n\t\t\t.setAttribute(\"stroke-dasharray\", circleDasharray);\r\n\t}\r\n\tfunction calculateTimeFraction() {\r\n\t\tconst TIME_LIMIT = total;\r\n\t\tlet rawTimeFraction;\r\n\t\tif (time > 1) rawTimeFraction = (time - 1) / TIME_LIMIT;\r\n\t\telse rawTimeFraction = time / TIME_LIMIT;\r\n\t\treturn rawTimeFraction - (1 / TIME_LIMIT) * (1 - rawTimeFraction);\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div class=\"base-timer\">\r\n\t\t\t\t<svg\r\n\t\t\t\t\tclass=\"base-timer__svg\"\r\n\t\t\t\t\tviewBox=\"0 0 100 100\"\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<g class=\"base-timer__circle\">\r\n\t\t\t\t\t\t<circle class=\"base-timer__path-elapsed\" cx=\"50\" cy=\"50\" r=\"45\" />\r\n\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\tid=\"base-timer-path-remaining\"\r\n\t\t\t\t\t\t\tstroke-dasharray=\"283\"\r\n\t\t\t\t\t\t\tclass=\"base-timer__path-remaining #fefefe\"\r\n\t\t\t\t\t\t\td=\"\r\n                                    M 50, 50\r\n                                    m -45, 0\r\n                                    a 45,45 0 1,0 90,0\r\n                                    a 45,45 0 1,0 -90,0\r\n                                    \"\r\n\t\t\t\t\t\t></path>\r\n\t\t\t\t\t</g>\r\n\t\t\t\t</svg>\r\n\t\t\t\t<span className=\"base-timer__label\">{time}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default memo(Clock);\r\n","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Home.js",["112"],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\redux\\ActionCreator.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\NextButton.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\redux\\ActionTypes.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\shared\\baseUrl.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Detection.js",["113"],"import { useEffect, useRef } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport * as ml5 from 'ml5';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport './detection.css';\r\n\r\nfunction Detection({\r\n\tSetmodelloading,\r\n\tSetdoingright,\r\n\tClassifying,\r\n\twhatdoing,\r\n\tasana,\r\n}) {\r\n\tconst webcamRef = useRef(null);\r\n\tconst canvasRef = useRef(null);\r\n\tconst poseNet = useRef(null);\r\n\tconst brain = useRef(null);\r\n\r\n\tlet options = {\r\n\t\tinputs: 34,\r\n\t\toutputs: [\"label\"],\r\n\t\ttask: \"classification\",\r\n\t\tdebug: true,\r\n\t};\r\n\r\n\tconst modelInfo = {\r\n\t\tmodel: `${baseUrl}data/models/finalmodel.json`,\r\n\t\tmetadata: `${baseUrl}data/models/finalmodel_meta.json`,\r\n\t\tweights: `${baseUrl}data/models/finalmodel.weights.bin`,\r\n\t};\r\n\tconst detect = () => {\r\n\t\tposeNet.current = ml5.poseNet(webcamRef.current.video, () => {\r\n\t\t\tconsole.log(\"Modal Loaded\");\r\n\t\t\tbrain.current.load(modelInfo, () => {\r\n\t\t\t\tconsole.log(\"pose classification ready!\");\r\n\t\t\t});\r\n\t\t\tSetmodelloading(false);\r\n\r\n\t\t\tconst videoWidth = webcamRef.current.video.videoWidth;\r\n\t\t\tconst videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n\t\t\t// Set video width\r\n\t\t\twebcamRef.current.video.width = videoWidth;\r\n\t\t\twebcamRef.current.video.height = videoHeight;\r\n\t\t\tcanvasRef.current.width = videoWidth;\r\n\t\t\tcanvasRef.current.height = videoHeight;\r\n\t\t\tposeNet.current.on(\"pose\", (poses) => {\r\n\t\t\t\tif (poses.length > 0) {\r\n\t\t\t\t\tif (Classifying()) classifyPose(poses[0].pose);\r\n\t\t\t\t\tif (canvasRef.current) {\r\n\t\t\t\t\t\tconst ctx = canvasRef.current.getContext(\"2d\");\r\n\t\t\t\t\t\tctx.clearRect(\r\n\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\tcanvasRef.current.width,\r\n\t\t\t\t\t\t\tcanvasRef.current.height\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\t\t\t\tdrawRect(poses, ctx);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\tconst classifyPose = (pose) => {\r\n\t\tlet inputs = [];\r\n\t\tfor (let i = 0; i < pose.keypoints.length; i++) {\r\n\t\t\tlet x = pose.keypoints[i].position.x;\r\n\t\t\tlet y = pose.keypoints[i].position.y;\r\n\t\t\tinputs.push(x);\r\n\t\t\tinputs.push(y);\r\n\t\t}\r\n\t\tbrain.current.classify(inputs, (error, results) => {\r\n\t\t\t// console.log(results[0]);\r\n\t\t\tif (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tif (whatdoing()) Setdoingright(false);\r\n\t\t\t} else if (results[0].label === asana && results[0].confidence > 0.8) {\r\n\t\t\t\tif (!whatdoing()) Setdoingright(true);\r\n\t\t\t\t// console.log(results[0].label, results[0].confidence);\r\n\t\t\t} else {\r\n\t\t\t\tif (whatdoing) Setdoingright(false);\r\n\t\t\t}\r\n\t\t\t//console.log(results[0].confidence);\r\n\t\t});\r\n\t};\r\n\t\tuseEffect(() => {\r\n\t\t\tbrain.current = ml5.neuralNetwork(options);\r\n\t\t},[]);\r\n\tuseEffect(() => {\r\n\t\tdetect();\r\n\t\treturn () => {\r\n\t\t\tposeNet.current.removeListener(\"pose\", (err) => {\r\n\t\t\t\tconsole.log(\"Removed\");\r\n\t\t\t});\r\n\t\t};\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [Classifying()]);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\" h-full w-full flex justify-items-center   p-10\">\r\n\t\t\t\t<div className=\"relative\">\r\n\t\t\t\t\t<Webcam ref={webcamRef} muted={true} className=\"webcam\" />\r\n\t\t\t\t\t<canvas ref={canvasRef} className=\"canvas\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nconst drawRect = (poses, ctx) => {\r\n  // ctx.drawImage(webcamRef.current.video, 0, 0);\r\n  const pose = poses[0].pose;\r\n  const skeleton = poses[0].skeleton;\r\n  for (let i = 0; i < pose.keypoints.length; i++) {\r\n    let x = pose.keypoints[i].position.x;\r\n    let y = pose.keypoints[i].position.y;\r\n    ctx.fillStyle = ' #39ff14';\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, 6, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n    ctx.fillStyle = '#fff';\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, 4, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n  }\r\n  for (let j = 0; j < poses[0].skeleton.length; j++) {\r\n    let partA = skeleton[j][0];\r\n    let partB = skeleton[j][1];\r\n    ctx.beginPath();\r\n    ctx.moveTo(partA.position.x, partA.position.y);\r\n    ctx.lineTo(partB.position.x, partB.position.y);\r\n    ctx.strokeStyle = ' #39ff14';\r\n\r\n    ctx.stroke();\r\n  }\r\n  // ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n};\r\n\r\nexport default Detection;\r\n","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Footer.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":28},{"ruleId":"118","severity":1,"message":"122","line":22,"column":10,"nodeType":"120","messageId":"121","endLine":22,"endColumn":16},{"ruleId":"118","severity":1,"message":"123","line":22,"column":18,"nodeType":"120","messageId":"121","endLine":22,"endColumn":27},{"ruleId":"118","severity":1,"message":"124","line":25,"column":16,"nodeType":"120","messageId":"121","endLine":25,"endColumn":23},{"ruleId":"118","severity":1,"message":"125","line":26,"column":10,"nodeType":"120","messageId":"121","endLine":26,"endColumn":16},{"ruleId":"118","severity":1,"message":"126","line":26,"column":18,"nodeType":"120","messageId":"121","endLine":26,"endColumn":27},{"ruleId":"114","replacedBy":"127"},{"ruleId":"116","replacedBy":"128"},{"ruleId":"118","severity":1,"message":"124","line":21,"column":16,"nodeType":"120","messageId":"121","endLine":21,"endColumn":23},{"ruleId":"118","severity":1,"message":"126","line":22,"column":18,"nodeType":"120","messageId":"121","endLine":22,"endColumn":27},{"ruleId":"129","severity":1,"message":"130","line":79,"column":6,"nodeType":"131","endLine":79,"endColumn":8,"suggestions":"132"},{"ruleId":"118","severity":1,"message":"133","line":14,"column":10,"nodeType":"120","messageId":"121","endLine":14,"endColumn":24},{"ruleId":"129","severity":1,"message":"134","line":31,"column":6,"nodeType":"131","endLine":31,"endColumn":8,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":107,"column":15,"nodeType":"138","endLine":110,"endColumn":17},{"ruleId":"129","severity":1,"message":"139","line":20,"column":5,"nodeType":"131","endLine":20,"endColumn":20,"suggestions":"140"},{"ruleId":"129","severity":1,"message":"141","line":20,"column":12,"nodeType":"142","endLine":20,"endColumn":19},{"ruleId":"118","severity":1,"message":"143","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":13},{"ruleId":"129","severity":1,"message":"144","line":90,"column":5,"nodeType":"131","endLine":90,"endColumn":7,"suggestions":"145"},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'loaded' is assigned a value but never used.","'Setloaded' is assigned a value but never used.","'Setswap' is assigned a value but never used.","'facing' is assigned a value but never used.","'Setfacing' is assigned a value but never used.",["146"],["147"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'detection'. Either include it or remove the dependency array.","ArrayExpression",["148"],"'ConfigureStore' is defined but never used.","React Hook useEffect has a missing dependency: 'arr'. Either include it or remove the dependency array.",["149"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'onComplete', 'pause', and 'setCircleDasharray'. Either include them or remove the dependency array. If 'pause' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["150"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'Login' is defined but never used.","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["151"],"no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [detection]",{"range":"160","text":"161"},"Update the dependencies array to be: [arr]",{"range":"162","text":"163"},"Update the dependencies array to be: [onComplete, pause, setCircleDasharray, time]",{"range":"164","text":"165"},"Update the dependencies array to be: [options]",{"range":"166","text":"167"},[2541,2543],"[detection]",[804,806],"[arr]",[471,486],"[onComplete, pause, setCircleDasharray, time]",[2528,2530],"[options]"]