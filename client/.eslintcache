[{"C:\\Users\\Mukhrit\\Desktop\\object-detection-eccomerce-master\\client\\src\\index.js":"1","C:\\Users\\Mukhrit\\Desktop\\object-detection-eccomerce-master\\client\\src\\App.js":"2","C:\\Users\\Mukhrit\\Desktop\\object-detection-eccomerce-master\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Mukhrit\\Desktop\\object-detection-eccomerce-master\\client\\src\\components\\loginButton.js":"4","C:\\Users\\Mukhrit\\Desktop\\object-detection-eccomerce-master\\client\\src\\redux\\configureStore.js":"5","C:\\Users\\Mukhrit\\Desktop\\object-detection-eccomerce-master\\client\\src\\posnet\\Trainedmodel.js":"6","C:\\Users\\Mukhrit\\Desktop\\object-detection-eccomerce-master\\client\\src\\redux\\ActionTypes.js":"7","C:\\Users\\Mukhrit\\Desktop\\object-detection-eccomerce-master\\client\\src\\redux\\authReducer.js":"8","C:\\Users\\Mukhrit\\Desktop\\object-detection-eccomerce-master\\client\\src\\redux\\ActionCreator.js":"9","C:\\Users\\Mukhrit\\Desktop\\object-detection-eccomerce-master\\client\\src\\shared\\baseUrl.js":"10"},{"size":654,"mtime":1612105160377,"results":"11","hashOfConfig":"12"},{"size":600,"mtime":1612375787997,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1611475335000,"results":"14","hashOfConfig":"12"},{"size":836,"mtime":1612377233932,"results":"15","hashOfConfig":"12"},{"size":374,"mtime":1612362547614,"results":"16","hashOfConfig":"12"},{"size":4697,"mtime":1612324700941,"results":"17","hashOfConfig":"12"},{"size":288,"mtime":1612357715162,"results":"18","hashOfConfig":"12"},{"size":1392,"mtime":1612362539256,"results":"19","hashOfConfig":"12"},{"size":1874,"mtime":1612376863020,"results":"20","hashOfConfig":"12"},{"size":50,"mtime":1612357803024,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1jvziz7",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Mukhrit\\Desktop\\object-detection-eccomerce-master\\client\\src\\index.js",[],["44","45"],"C:\\Users\\Mukhrit\\Desktop\\object-detection-eccomerce-master\\client\\src\\App.js",["46","47","48"],"C:\\Users\\Mukhrit\\Desktop\\object-detection-eccomerce-master\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Mukhrit\\Desktop\\object-detection-eccomerce-master\\client\\src\\components\\loginButton.js",["49"],"C:\\Users\\Mukhrit\\Desktop\\object-detection-eccomerce-master\\client\\src\\redux\\configureStore.js",[],"C:\\Users\\Mukhrit\\Desktop\\object-detection-eccomerce-master\\client\\src\\posnet\\Trainedmodel.js",["50","51","52","53","54","55","56"],"import React from 'react';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport * as ml5 from 'ml5';\r\nimport Webcam from 'react-webcam';\r\nlet options = {\r\n  inputs: 34,\r\n  outputs: 2,\r\n  task: 'classification',\r\n  debug: true,\r\n};\r\n\r\nconst modelInfo = {\r\n  model: '../model/model.json',\r\n  metadata: '../model/model_meta.json',\r\n  weights: '../model/model.weights.bin',\r\n};\r\nfunction Trainedmodel() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [poses, Setposes] = useState([]);\r\n  const [swap, Setswap] = useState(true);\r\n  const [facing, Setfacing] = useState(false);\r\n  const [collecting, Setcollecting] = useState(false);\r\n  const [targetLabel, Setlabel] = useState('');\r\n  const [resultspose, Setresultspose] = useState([]);\r\n  const brain = useRef(null);\r\n\r\n  const drawRect = (poses, ctx) => {\r\n    // ctx.drawImage(webcamRef.current.video, 0, 0);\r\n    const pose = poses[0].pose;\r\n    const skeleton = poses[0].skeleton;\r\n    for (let i = 0; i < pose.keypoints.length; i++) {\r\n      let x = pose.keypoints[i].position.x;\r\n      let y = pose.keypoints[i].position.y;\r\n      ctx.fillStyle = ' #39ff14';\r\n      ctx.beginPath();\r\n      ctx.arc(x, y, 6, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n      ctx.fillStyle = '#fff';\r\n      ctx.beginPath();\r\n      ctx.arc(x, y, 4, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n    }\r\n    for (let j = 0; j < poses[0].skeleton.length; j++) {\r\n      let partA = skeleton[j][0];\r\n      let partB = skeleton[j][1];\r\n      ctx.beginPath();\r\n      ctx.moveTo(partA.position.x, partA.position.y);\r\n      ctx.lineTo(partB.position.x, partB.position.y);\r\n      ctx.strokeStyle = ' #39ff14';\r\n\r\n      ctx.stroke();\r\n    }\r\n  };\r\n  const detection = () => {\r\n    const poseNet = ml5.poseNet(webcamRef.current.video, () => {\r\n      console.log('Modal Loaded');\r\n      brain.current.load(modelInfo, () => {\r\n        console.log('pose classification ready!');\r\n      });\r\n\r\n      if (\r\n        typeof webcamRef.current !== 'undefined' &&\r\n        webcamRef.current !== null &&\r\n        webcamRef.current.video.readyState === 4\r\n      ) {\r\n        const videoWidth = webcamRef.current.video.videoWidth;\r\n        const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n        // Set video width\r\n        webcamRef.current.video.width = videoWidth;\r\n        webcamRef.current.video.height = videoHeight;\r\n        canvasRef.current.width = videoWidth;\r\n        canvasRef.current.height = videoHeight;\r\n\r\n        poseNet.on('pose', (poses) => {\r\n          if (poses.length > 0) {\r\n            Setposes(poses);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    brain.current = ml5.neuralNetwork(options);\r\n    detection();\r\n  }, []);\r\n\r\n  const classifyPose = (poses) => {\r\n    const pose = poses[0].pose;\r\n    let inputs = [];\r\n    for (let i = 0; i < pose.keypoints.length; i++) {\r\n      let x = pose.keypoints[i].position.x;\r\n      let y = pose.keypoints[i].position.y;\r\n      inputs.push(x);\r\n      inputs.push(y);\r\n    }\r\n    brain.current.classify(inputs, (error, results) => {\r\n      // console.log(results[0]);\r\n      if (error) {\r\n        console.log(error);\r\n      } else {\r\n        Setresultspose(results);\r\n        // console.log(results[0].label,results[0].confidence);\r\n      }\r\n      //console.log(results[0].confidence);\r\n    });\r\n  };\r\n\r\n  if (poses.length > 0) {\r\n    classifyPose(poses);\r\n    const ctx = canvasRef.current.getContext('2d');\r\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n    requestAnimationFrame(() => {\r\n      drawRect(poses, ctx);\r\n    });\r\n  }\r\n  const videoConstraints = {\r\n    facingMode: facing ? { exact: 'environment' } : 'user',\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='h-screen overflow-hidden'>\r\n        <Webcam\r\n          videoConstraints={videoConstraints}\r\n          ref={webcamRef}\r\n          src='youtube.com/watch?v=t4EFxQDhA8A'\r\n          muted={true}\r\n          style={{\r\n            transform: swap && 'scaleX(-1)',\r\n            position: 'absolute',\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: 'center',\r\n            zindex: 9,\r\n          }}\r\n        />\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            transform: swap && 'scaleX(-1)',\r\n            position: 'absolute',\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: 'center',\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Trainedmodel;\r\n","C:\\Users\\Mukhrit\\Desktop\\object-detection-eccomerce-master\\client\\src\\redux\\ActionTypes.js",[],"C:\\Users\\Mukhrit\\Desktop\\object-detection-eccomerce-master\\client\\src\\redux\\authReducer.js",[],"C:\\Users\\Mukhrit\\Desktop\\object-detection-eccomerce-master\\client\\src\\redux\\ActionCreator.js",[],"C:\\Users\\Mukhrit\\Desktop\\object-detection-eccomerce-master\\client\\src\\shared\\baseUrl.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":4,"column":10,"nodeType":"63","messageId":"64","endLine":4,"endColumn":23},{"ruleId":"61","severity":1,"message":"65","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":20},{"ruleId":"66","severity":1,"message":"67","line":12,"column":3,"nodeType":"68","messageId":"69","endLine":14,"endColumn":4},{"ruleId":"66","severity":1,"message":"67","line":7,"column":3,"nodeType":"68","messageId":"69","endLine":9,"endColumn":4},{"ruleId":"61","severity":1,"message":"70","line":21,"column":16,"nodeType":"63","messageId":"64","endLine":21,"endColumn":23},{"ruleId":"61","severity":1,"message":"71","line":22,"column":18,"nodeType":"63","messageId":"64","endLine":22,"endColumn":27},{"ruleId":"61","severity":1,"message":"72","line":23,"column":10,"nodeType":"63","messageId":"64","endLine":23,"endColumn":20},{"ruleId":"61","severity":1,"message":"73","line":23,"column":22,"nodeType":"63","messageId":"64","endLine":23,"endColumn":35},{"ruleId":"61","severity":1,"message":"74","line":24,"column":10,"nodeType":"63","messageId":"64","endLine":24,"endColumn":21},{"ruleId":"61","severity":1,"message":"75","line":24,"column":23,"nodeType":"63","messageId":"64","endLine":24,"endColumn":31},{"ruleId":"61","severity":1,"message":"76","line":25,"column":10,"nodeType":"63","messageId":"64","endLine":25,"endColumn":21},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Trainedmodel' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Setswap' is assigned a value but never used.","'Setfacing' is assigned a value but never used.","'collecting' is assigned a value but never used.","'Setcollecting' is assigned a value but never used.","'targetLabel' is assigned a value but never used.","'Setlabel' is assigned a value but never used.","'resultspose' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]