[{"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\App.js":"2","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\reportWebVitals.js":"3","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\Posnet.js":"4","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\Collect.js":"5","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\train.js":"6","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\Trainedmodel.js":"7","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\Tfposnet.js":"8"},{"size":585,"mtime":1612076513760,"results":"9","hashOfConfig":"10"},{"size":447,"mtime":1612075838285,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611428371651,"results":"12","hashOfConfig":"10"},{"size":4408,"mtime":1611998592797,"results":"13","hashOfConfig":"10"},{"size":5357,"mtime":1612032800906,"results":"14","hashOfConfig":"10"},{"size":367,"mtime":1611647021066,"results":"15","hashOfConfig":"10"},{"size":5345,"mtime":1611647711843,"results":"16","hashOfConfig":"10"},{"size":1519,"mtime":1612075809518,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17hw2yg",{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\index.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\App.js",["38","39","40","41"],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\reportWebVitals.js",[],["42","43"],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\Posnet.js",["44","45","46","47","48","49","50"],"import  { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport * as ml5 from \"ml5\";\r\nimport Webcam from \"react-webcam\";\r\n\r\nfunction Posnet() {\r\n\tconst webcamRef = useRef(null);\r\n\tconst canvasRef = useRef(null);\r\n\tconst [poses,Setposes]=useState([]);\r\n\tconst [swap,Setswap]=useState(false);\r\n\tconst [facing,Setfacing]=useState(false);\r\n\tconst [deviceId, setDeviceId] = useState({});\r\n\tconst [devices, setDevices] =useState([]);\r\n\r\n\tconst handleDevices = useCallback(\r\n\t\t(mediaDevices) =>\r\n\t\t\tsetDevices(mediaDevices.filter(({ kind }) => kind === \"videoinput\")),\r\n\t\t[setDevices]\r\n\t);\r\n\r\n\tconst drawRect = (poses, ctx) => {\r\n        // ctx.drawImage(webcamRef.current.video, 0, 0);\r\n\t\tconst pose = poses[0].pose;\r\n\t\tconst skeleton = poses[0].skeleton;\r\n\t\tfor (let i = 0; i < pose.keypoints.length; i++) {\r\n\t\t\tlet x = pose.keypoints[i].position.x;\r\n\t\t\tlet y = pose.keypoints[i].position.y;\r\n\t\t\tctx.fillStyle = \" #39ff14\";\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.arc(x, y, 6, 0, 2 * Math.PI);\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle=\"#fff\";\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.arc(x, y, 4, 0, 2 * Math.PI);\r\n\t\t\t\tctx.fill();\r\n\t\t}\r\n\t\tfor (let j = 0; j < poses[0].skeleton.length; j++) {\r\n\t\t\tlet partA = skeleton[j][0];\r\n\t\t\tlet partB = skeleton[j][1];\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(partA.position.x, partA.position.y);\r\n\t\t\tctx.lineTo(partB.position.x, partB.position.y);\r\n\t\t\tctx.strokeStyle = \" #39ff14\";\r\n\r\n\t\t\tctx.stroke();\r\n\t\r\n\t\t}\r\n\t\t// ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n\t};\r\n\tconst detection = () => {\r\n\t\t// if (\r\n\t\t// \ttypeof webcamRef.current !== \"undefined\" &&\r\n\t\t// \twebcamRef.current !== null &&\r\n\t\t// \twebcamRef.current.video.readyState === 4\r\n\t\t// )\r\n\r\n\t\tconst poseNet = ml5.poseNet(\r\n\t\t\twebcamRef.current.video,\r\n\t\t\t() => {\r\n\t\t\t\tconsole.log(\"Modal Loaded\");\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\ttypeof webcamRef.current !== \"undefined\" &&\r\n\t\t\t\t\twebcamRef.current !== null &&\r\n\t\t\t\t\twebcamRef.current.video.readyState === 4\r\n\t\t\t\t) {\r\n\t\t\t\t\tconst videoWidth = webcamRef.current.video.videoWidth;\r\n\t\t\t\t\tconst videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n\t\t\t\t\t// Set video width\r\n\t\t\t\t\twebcamRef.current.video.width = videoWidth;\r\n\t\t\t\t\twebcamRef.current.video.height = videoHeight;\r\n\t\t\t\t\tcanvasRef.current.width = videoWidth;\r\n\t\t\t\t\tcanvasRef.current.height = videoHeight;\r\n\t\t\t\t\tposeNet.on(\"pose\", (poses) => {\r\n\t\t\t\t\t\tif (poses.length > 0) {\r\n\t\t\t\t\t\t\t// console.log(poses);\r\n\t\t\t\t\t\t\t// const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n\t\t\t\t\t\t\t// requestAnimationFrame(() => {\r\n\t\t\t\t\t\t\t// \tdrawRect(poses, ctx);\r\n\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\tSetposes(poses);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tnavigator.mediaDevices.enumerateDevices().then(handleDevices);\r\n\t}, [handleDevices]);\r\n\tif(poses.length>0){\r\n\t\tconst ctx = canvasRef.current.getContext(\"2d\");\r\n\t\tctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tdrawRect(poses, ctx);\r\n\t\t});\r\n\t}\r\n\t// const videoConstraints = {\r\n\t// \tfacingMode: facing? { exact: \"environment\" } : \"user\"\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<div className=\" \">\r\n\t\t\t{devices.map((device, key) => (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Webcam\r\n\t\t\t\t\t\taudio={false}\r\n\t\t\t\t\t\tvideoConstraints={{ deviceId: device.deviceId }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{device.label || `Device ${key + 1}`}\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t\t{/* <Webcam\r\n\t\t\t\tvideoConstraints={videoConstraints}\r\n\t\t\t\tref={webcamRef}\r\n\t\t\t\tmuted={true}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttransform: swap && \"scaleX(-1)\",\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\tmarginLeft: \"auto\",\r\n\t\t\t\t\tmarginRight: \"auto\",\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\tright: 0,\r\n\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\tzindex: 9,\r\n\t\t\t\t\twidth: 640,\r\n\t\t\t\t\theight: 480,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<canvas\r\n\t\t\t\tref={canvasRef}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttransform: swap && \"scaleX(-1)\",\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\tmarginLeft: \"auto\",\r\n\t\t\t\t\tmarginRight: \"auto\",\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\tright: 0,\r\n\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\tzindex: 9,\r\n\t\t\t\t\twidth: 640,\r\n\t\t\t\t\theight: 480,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"inline-block bottom-0 absolute px-3 py-2 rounded-xl cursor-pointer bg-yellow-400 text-lg text-black\"\r\n\t\t\t\tonClick={() => Setswap(!swap)}\r\n\t\t\t>\r\n\t\t\t\tswap\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"inline-block absolute bottom-0 right-0 px-3 py-2 rounded-xl cursor-pointer bg-yellow-400 text-lg text-black\"\r\n\t\t\t\tonClick={() => Setfacing(!facing)}\r\n\t\t\t>\r\n\t\t\t\t{facing ? \"Front\" : \"Back\"}\r\n\t\t\t</div> */}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Posnet;\r\n","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\Collect.js",["51","52","53","54","55","56","57","58","59"],"import React, { useCallback } from \"react\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport * as ml5 from \"ml5\";\r\nimport Webcam from \"react-webcam\";\r\nlet options = {\r\n\tinputs: 34,\r\n\toutputs: 2,\r\n\ttask: \"classification\",\r\n\tdebug: true,\r\n};\r\n// const brain = ml5.neuralNetwork(options);\r\n// brain.loadData(\"../testdata.json\", ()=>{\r\n//          brain.normalizeData();\r\n// \t\tbrain.train({ epochs: 50 }, ()=>{\r\n//             console.log(\"model trained\");\r\n// \t\t\t\t\t\tbrain.save();\r\n//         }); \r\n// });\r\nfunction Collect() {\r\n\tconst webcamRef = useRef(null);\r\n\tconst canvasRef = useRef(null);\r\n\tconst [loaded,Setloaded]=useState(false);\r\n\tconst brain=useRef(null);\r\n\tconst [poses, Setposes] = useState([]);\r\n\tconst [swap, Setswap] = useState(false);\r\n\tconst [facing, Setfacing] = useState(false);\r\n\tconst [collecting, Setcollecting] = useState(false);\r\n\tconst [targetLabel, Setlabel] = useState(\"\");\r\n\t\tconst [deviceId, setDeviceId] = useState({});\r\n\t\tconst [devices, setDevices] = useState([]);\r\n\r\n\tconst handleDevices = useCallback(\r\n\t\t(mediaDevices) =>\r\n\t\t\tsetDevices(mediaDevices.filter(({ kind }) => kind === \"videoinput\")),\r\n\t\t[setDevices]\r\n\t);\r\n\r\n\tconst drawRect = (poses, ctx) => {\r\n\t\t// ctx.drawImage(webcamRef.current.video, 0, 0);\r\n\t\tconst pose = poses[0].pose;\r\n\t\tconst skeleton = poses[0].skeleton;\r\n\t\tfor (let i = 0; i < pose.keypoints.length; i++) {\r\n\t\t\tlet x = pose.keypoints[i].position.x;\r\n\t\t\tlet y = pose.keypoints[i].position.y;\r\n\t\t\tctx.fillStyle = \" #39ff14\";\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.arc(x, y, 6, 0, 2 * Math.PI);\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"#fff\";\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.arc(x, y, 4, 0, 2 * Math.PI);\r\n\t\t\tctx.fill();\r\n\t\t}\r\n\t\tfor (let j = 0; j < poses[0].skeleton.length; j++) {\r\n\t\t\tlet partA = skeleton[j][0];\r\n\t\t\tlet partB = skeleton[j][1];\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(partA.position.x, partA.position.y);\r\n\t\t\tctx.lineTo(partB.position.x, partB.position.y);\r\n\t\t\tctx.strokeStyle = \" #39ff14\";\r\n\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t\t// ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n\t};\r\n\tconst detection = () => {\r\n\t\r\n\r\n\t\tconst poseNet = ml5.poseNet(webcamRef.current.video, () => {\r\n\t\t\tconsole.log(\"Modal Loaded\");\r\n\r\n\t\t\t\tconst videoWidth = webcamRef.current.video.videoWidth;\r\n\t\t\t\tconst videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n\t\t\t\t// Set video width\r\n\t\t\t\twebcamRef.current.video.width = videoWidth;\r\n\t\t\t\twebcamRef.current.video.height = videoHeight;\r\n\t\t\t\tcanvasRef.current.width = videoWidth;\r\n\t\t\t\tcanvasRef.current.height = videoHeight;\r\n\t\t\t\tposeNet.on(\"pose\", (poses) => {\r\n\t\t\t\t\tif (poses.length > 0) {\r\n\t\t\t\t\t\tSetposes(poses);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t});\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tbrain.current = ml5.neuralNetwork(options);\r\n\t\tdetection();\r\n\t}, []);\r\n\r\n\tif (poses.length > 0) {\r\n\t\tif (collecting) {\r\n\t\t\tconst pose = poses[0].pose;\r\n\t\t\tlet inputs = [];\r\n\t\t\tfor (let i = 0; i < pose.keypoints.length; i++) {\r\n\t\t\t\tlet x = pose.keypoints[i].position.x;\r\n\t\t\t\tlet y = pose.keypoints[i].position.y;\r\n\t\t\t\tinputs.push(x);\r\n\t\t\t\tinputs.push(y);\r\n\t\t\t}\r\n\t\t\tlet target = [targetLabel];\r\n\t\t\tbrain.current.addData(inputs, target);\r\n\t\t}\r\n\t\tconst ctx = canvasRef.current.getContext(\"2d\");\r\n\t\tctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tdrawRect(poses, ctx);\r\n\t\t});\r\n\t}\r\n\tconst collecttrain = () => {\r\n\t\tsetTimeout(() => {\r\n            Setcollecting(true);\r\n            console.log(\"Collecting\");\r\n\t\t\tsetTimeout(() => {\r\n                Setcollecting(false);\r\n            console.log(\"Stop Collecting\");\r\n\t\t\t}, 10000);\r\n\t\t}, 1000);\r\n    };\r\n    const savedata=()=>{\r\n        brain.current.saveData();\r\n    }\r\n\t// const videoConstraints = {\r\n\t// \tdeviceId: devices[1].deviceId ? devices[1].deviceId : 0,\r\n\t// };\r\n\t// if (targetLabel != \"\") {\r\n\t// \t\t\tconsole.log(targetLabel);\r\n\t// \t\t}\r\n\t// console.log(collecting)\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"h-screen overflow-hidden\">\r\n\t\t\t\t<Webcam\r\n\t\t\t\t\tref={webcamRef}\r\n\t\t\t\t\tmuted={true}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\ttransform: swap && \"scaleX(-1)\",\r\n\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\tmarginLeft: \"auto\",\r\n\t\t\t\t\t\tmarginRight: \"auto\",\r\n\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\tright: 0,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tzindex: 9,\r\n\t\t\t\t\t\twidth: 640,\r\n\t\t\t\t\t\theight: 480,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<canvas\r\n\t\t\t\t\tref={canvasRef}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\ttransform: swap && \"scaleX(-1)\",\r\n\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\tmarginLeft: \"auto\",\r\n\t\t\t\t\t\tmarginRight: \"auto\",\r\n\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\tright: 0,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tzindex: 9,\r\n\t\t\t\t\t\twidth: 640,\r\n\t\t\t\t\t\theight: 480,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"label\"\r\n\t\t\t\t\tclassName=\" border-black border-2\"\r\n\t\t\t\t\tonChange={(e) => Setlabel(e.target.value)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"inline-block px-3 py-2 rounded-xl cursor-pointer bg-yellow-400 text-lg text-black\"\r\n\t\t\t\t\tonClick={() => savedata()}\r\n\t\t\t\t>\r\n\t\t\t\t\tSave\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"inline-block px-3 py-2 rounded-xl cursor-pointer bg-yellow-400 text-lg text-black\"\r\n\t\t\t\t\tonClick={() => collecttrain()}\r\n\t\t\t\t>\r\n\t\t\t\t\tTrain\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* <div\r\n\t\t\t\t\t\tclassName=\"inline-block absolute bottom-0 right-0 px-3 py-2 rounded-xl cursor-pointer bg-yellow-400 text-lg text-black\"\r\n\t\t\t\t\t\tonClick={() => Setfacing(!facing)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{facing ? \"Front\" : \"Back\"}\r\n\t\t\t\t\t</div> */}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Collect;\r\n","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\train.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\Trainedmodel.js",["60","61","62","63","64","65"],"import React from \"react\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport * as ml5 from \"ml5\";\r\nimport Webcam from \"react-webcam\";\r\nlet options = {\r\n\tinputs: 34,\r\n\toutputs: 2,\r\n\ttask: \"classification\",\r\n\tdebug: true,\r\n};\r\n\r\nconst modelInfo = {\r\n\tmodel: \"../model/model.json\",\r\n\tmetadata: \"../model/model_meta.json\",\r\n\tweights: \"../model/model.weights.bin\",\r\n};\r\nfunction Trainedmodel() {\r\n\tconst webcamRef = useRef(null);\r\n\tconst canvasRef = useRef(null);\r\n\tconst [poses, Setposes] = useState([]);\r\n\tconst [swap, Setswap] = useState(false);\r\n\tconst [facing, Setfacing] = useState(false);\r\n\tconst [collecting, Setcollecting] = useState(false);\r\n\tconst [targetLabel, Setlabel] = useState(\"\");\r\n\tconst brain=useRef(null);\r\n\r\n\tconst drawRect = (poses, ctx) => {\r\n\t\t// ctx.drawImage(webcamRef.current.video, 0, 0);\r\n\t\tconst pose = poses[0].pose;\r\n\t\tconst skeleton = poses[0].skeleton;\r\n\t\tfor (let i = 0; i < pose.keypoints.length; i++) {\r\n\t\t\tlet x = pose.keypoints[i].position.x;\r\n\t\t\tlet y = pose.keypoints[i].position.y;\r\n\t\t\tctx.fillStyle = \" #39ff14\";\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.arc(x, y, 6, 0, 2 * Math.PI);\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"#fff\";\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.arc(x, y, 4, 0, 2 * Math.PI);\r\n\t\t\tctx.fill();\r\n\t\t}\r\n\t\tfor (let j = 0; j < poses[0].skeleton.length; j++) {\r\n\t\t\tlet partA = skeleton[j][0];\r\n\t\t\tlet partB = skeleton[j][1];\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(partA.position.x, partA.position.y);\r\n\t\t\tctx.lineTo(partB.position.x, partB.position.y);\r\n\t\t\tctx.strokeStyle = \" #39ff14\";\r\n\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t\t// ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n\t};\r\n\tconst detection = () => {\r\n\t\t// if (\r\n\t\t// \ttypeof webcamRef.current !== \"undefined\" &&\r\n\t\t// \twebcamRef.current !== null &&\r\n\t\t// \twebcamRef.current.video.readyState === 4\r\n\t\t// )\r\n\r\n\t\tconst poseNet = ml5.poseNet(webcamRef.current.video, () => {\r\n\t\t\tconsole.log(\"Modal Loaded\");\r\n\t\t\t\tbrain.current.load(modelInfo, () => {\r\n\t\t\t\t\tconsole.log(\"pose classification ready!\");\r\n\t\t\t\t});\r\n\r\n\t\t\tif (\r\n\t\t\t\ttypeof webcamRef.current !== \"undefined\" &&\r\n\t\t\t\twebcamRef.current !== null &&\r\n\t\t\t\twebcamRef.current.video.readyState === 4\r\n\t\t\t) {\r\n\t\t\t\tconst videoWidth = webcamRef.current.video.videoWidth;\r\n\t\t\t\tconst videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n\t\t\t\t// Set video width\r\n\t\t\t\twebcamRef.current.video.width = videoWidth;\r\n\t\t\t\twebcamRef.current.video.height = videoHeight;\r\n\t\t\t\tcanvasRef.current.width = videoWidth;\r\n\t\t\t\tcanvasRef.current.height = videoHeight;\r\n\t\t\t\tposeNet.on(\"pose\", (poses) => {\r\n\t\t\t\t\tif (poses.length > 0) {\r\n\t\t\t\t\t\tSetposes(poses);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\r\n\t};\r\n\tuseEffect(() => {\r\n\t\t brain.current = ml5.neuralNetwork(options);\r\n\t\tdetection();\r\n\t}, []);\r\n\t\tconst classifyPose = (poses) => {\r\n\t\t\t\tconst pose = poses[0].pose;\r\n\t\t\t\tlet inputs = [];\r\n\t\t\t\tfor (let i = 0; i < pose.keypoints.length; i++) {\r\n\t\t\t\t\tlet x = pose.keypoints[i].position.x;\r\n\t\t\t\t\tlet y = pose.keypoints[i].position.y;\r\n\t\t\t\t\tinputs.push(x);\r\n\t\t\t\t\tinputs.push(y);\r\n\t\t\t\t}\r\n\t\t\t\tbrain.current.classify(inputs, (error, results) => {\r\n\t\t\t\t\t// console.log(results[0]);\r\n\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t} else if (results[0].confidence > 0.9) {\r\n\t\t\t\t\t\tconsole.log(results[0].label,results[0].confidence);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//console.log(results[0].confidence);\r\n\t\t\t\t});\r\n\t\t};\r\n\t\r\n\tif (poses.length > 0) {\r\n\t\tclassifyPose(poses);\r\n\t\tconst ctx = canvasRef.current.getContext(\"2d\");\r\n\t\tctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tdrawRect(poses, ctx);\r\n\t\t});\r\n\t\t\r\n\t}\r\n\tconst videoConstraints = {\r\n\t\tfacingMode: facing ? { exact: \"environment\" } : \"user\",\r\n\t};\r\n\t// if (targetLabel != \"\") {\r\n\t// \t\t\tconsole.log(targetLabel);\r\n\t// \t\t}\r\n\t// console.log(collecting);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"h-screen overflow-hidden\">\r\n\t\t\t\t<Webcam\r\n\t\t\t\t\tvideoConstraints={videoConstraints}\r\n\t\t\t\t\tref={webcamRef}\r\n\t\t\t\t\tsrc=\"youtube.com/watch?v=t4EFxQDhA8A\"\r\n\t\t\t\t\tmuted={true}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\ttransform: swap && \"scaleX(-1)\",\r\n\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\tmarginLeft: \"auto\",\r\n\t\t\t\t\t\tmarginRight: \"auto\",\r\n\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\tright: 0,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tzindex: 9,\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<canvas\r\n\t\t\t\t\tref={canvasRef}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\ttransform: swap && \"scaleX(-1)\",\r\n\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\tmarginLeft: \"auto\",\r\n\t\t\t\t\t\tmarginRight: \"auto\",\r\n\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\tright: 0,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tzindex: 9,\r\n\t\t\t\t\t\twidth: 640,\r\n\t\t\t\t\t\theight: 480,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* <input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"label\"\r\n\t\t\t\t\tclassName=\" border-black border-2\"\r\n\t\t\t\t\tonChange={(e) => Setlabel(e.target.value)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"inline-block px-3 py-2 rounded-xl cursor-pointer bg-yellow-400 text-lg text-black\"\r\n\t\t\t\t\tonClick={() => savedata()}\r\n\t\t\t\t>\r\n\t\t\t\t\tSave\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"inline-block px-3 py-2 rounded-xl cursor-pointer bg-yellow-400 text-lg text-black\"\r\n\t\t\t\t\tonClick={() => collecttrain()}\r\n\t\t\t\t>\r\n\t\t\t\t\tTrain\r\n\t\t\t\t</div> */}\r\n\t\t\t\t{/* <div\r\n\t\t\t\t\t\tclassName=\"inline-block absolute bottom-0 right-0 px-3 py-2 rounded-xl cursor-pointer bg-yellow-400 text-lg text-black\"\r\n\t\t\t\t\t\tonClick={() => Setfacing(!facing)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{facing ? \"Front\" : \"Back\"}\r\n\t\t\t\t\t</div> */}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Trainedmodel;\r\n","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\Tfposnet.js",["66","67"],{"ruleId":"68","severity":1,"message":"69","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":15},{"ruleId":"68","severity":1,"message":"72","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":14},{"ruleId":"68","severity":1,"message":"73","line":5,"column":10,"nodeType":"70","messageId":"71","endLine":5,"endColumn":22},{"ruleId":"68","severity":1,"message":"74","line":7,"column":8,"nodeType":"70","messageId":"71","endLine":7,"endColumn":20},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"68","severity":1,"message":"79","line":9,"column":9,"nodeType":"70","messageId":"71","endLine":9,"endColumn":13},{"ruleId":"68","severity":1,"message":"80","line":9,"column":14,"nodeType":"70","messageId":"71","endLine":9,"endColumn":21},{"ruleId":"68","severity":1,"message":"81","line":10,"column":9,"nodeType":"70","messageId":"71","endLine":10,"endColumn":15},{"ruleId":"68","severity":1,"message":"82","line":10,"column":16,"nodeType":"70","messageId":"71","endLine":10,"endColumn":25},{"ruleId":"68","severity":1,"message":"83","line":11,"column":9,"nodeType":"70","messageId":"71","endLine":11,"endColumn":17},{"ruleId":"68","severity":1,"message":"84","line":11,"column":19,"nodeType":"70","messageId":"71","endLine":11,"endColumn":30},{"ruleId":"68","severity":1,"message":"85","line":49,"column":8,"nodeType":"70","messageId":"71","endLine":49,"endColumn":17},{"ruleId":"68","severity":1,"message":"86","line":22,"column":9,"nodeType":"70","messageId":"71","endLine":22,"endColumn":15},{"ruleId":"68","severity":1,"message":"87","line":22,"column":16,"nodeType":"70","messageId":"71","endLine":22,"endColumn":25},{"ruleId":"68","severity":1,"message":"80","line":25,"column":15,"nodeType":"70","messageId":"71","endLine":25,"endColumn":22},{"ruleId":"68","severity":1,"message":"81","line":26,"column":9,"nodeType":"70","messageId":"71","endLine":26,"endColumn":15},{"ruleId":"68","severity":1,"message":"82","line":26,"column":17,"nodeType":"70","messageId":"71","endLine":26,"endColumn":26},{"ruleId":"68","severity":1,"message":"83","line":29,"column":10,"nodeType":"70","messageId":"71","endLine":29,"endColumn":18},{"ruleId":"68","severity":1,"message":"84","line":29,"column":20,"nodeType":"70","messageId":"71","endLine":29,"endColumn":31},{"ruleId":"68","severity":1,"message":"88","line":30,"column":10,"nodeType":"70","messageId":"71","endLine":30,"endColumn":17},{"ruleId":"68","severity":1,"message":"89","line":32,"column":8,"nodeType":"70","messageId":"71","endLine":32,"endColumn":21},{"ruleId":"68","severity":1,"message":"80","line":21,"column":15,"nodeType":"70","messageId":"71","endLine":21,"endColumn":22},{"ruleId":"68","severity":1,"message":"82","line":22,"column":17,"nodeType":"70","messageId":"71","endLine":22,"endColumn":26},{"ruleId":"68","severity":1,"message":"90","line":23,"column":9,"nodeType":"70","messageId":"71","endLine":23,"endColumn":19},{"ruleId":"68","severity":1,"message":"91","line":23,"column":21,"nodeType":"70","messageId":"71","endLine":23,"endColumn":34},{"ruleId":"68","severity":1,"message":"92","line":24,"column":9,"nodeType":"70","messageId":"71","endLine":24,"endColumn":20},{"ruleId":"68","severity":1,"message":"93","line":24,"column":22,"nodeType":"70","messageId":"71","endLine":24,"endColumn":30},{"ruleId":"68","severity":1,"message":"94","line":6,"column":9,"nodeType":"70","messageId":"71","endLine":6,"endColumn":14},{"ruleId":"68","severity":1,"message":"95","line":6,"column":16,"nodeType":"70","messageId":"71","endLine":6,"endColumn":24},"no-unused-vars","'Collect' is defined but never used.","Identifier","unusedVar","'Posnet' is defined but never used.","'testfunction' is defined but never used.","'Trainedmodel' is defined but never used.","no-native-reassign",["96"],"no-negated-in-lhs",["97"],"'swap' is assigned a value but never used.","'Setswap' is assigned a value but never used.","'facing' is assigned a value but never used.","'Setfacing' is assigned a value but never used.","'deviceId' is assigned a value but never used.","'setDeviceId' is assigned a value but never used.","'detection' is assigned a value but never used.","'loaded' is assigned a value but never used.","'Setloaded' is assigned a value but never used.","'devices' is assigned a value but never used.","'handleDevices' is assigned a value but never used.","'collecting' is assigned a value but never used.","'Setcollecting' is assigned a value but never used.","'targetLabel' is assigned a value but never used.","'Setlabel' is assigned a value but never used.","'poses' is assigned a value but never used.","'Setposes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]