[{"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\reportWebVitals.js":"2","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\App.js":"3","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Maincomponent.js":"4","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\Collect.js":"5","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\train.js":"6","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\Trainedmodel.js":"7","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\redux\\configureStore.js":"8","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Header.js":"9","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Learn.js":"10","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\ClassifyAll.js":"11","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\loginButton.js":"12","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\redux\\poseReducer.js":"13","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\redux\\authReducer.js":"14","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Leaderboard.js":"15","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Clock.js":"16","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Home.js":"17","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\redux\\ActionCreator.js":"18","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\NextButton.js":"19","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\redux\\ActionTypes.js":"20","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\shared\\baseUrl.js":"21","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Detection.js":"22"},{"size":654,"mtime":1612105422750,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1611428371651,"results":"25","hashOfConfig":"24"},{"size":653,"mtime":1615782329027,"results":"26","hashOfConfig":"24"},{"size":1457,"mtime":1615782523589,"results":"27","hashOfConfig":"24"},{"size":5094,"mtime":1615781287926,"results":"28","hashOfConfig":"24"},{"size":458,"mtime":1615781287942,"results":"29","hashOfConfig":"24"},{"size":5442,"mtime":1615783289820,"results":"30","hashOfConfig":"24"},{"size":432,"mtime":1615392575659,"results":"31","hashOfConfig":"24"},{"size":9005,"mtime":1615779103101,"results":"32","hashOfConfig":"24"},{"size":4267,"mtime":1615734126443,"results":"33","hashOfConfig":"24"},{"size":5958,"mtime":1615784081284,"results":"34","hashOfConfig":"24"},{"size":1316,"mtime":1613240215045,"results":"35","hashOfConfig":"24"},{"size":418,"mtime":1615392575668,"results":"36","hashOfConfig":"24"},{"size":1491,"mtime":1615778463548,"results":"37","hashOfConfig":"24"},{"size":4052,"mtime":1615781287893,"results":"38","hashOfConfig":"24"},{"size":1815,"mtime":1615047819137,"results":"39","hashOfConfig":"24"},{"size":1232,"mtime":1613235884568,"results":"40","hashOfConfig":"24"},{"size":2175,"mtime":1615736509628,"results":"41","hashOfConfig":"24"},{"size":1178,"mtime":1615782529616,"results":"42","hashOfConfig":"24"},{"size":421,"mtime":1615392575577,"results":"43","hashOfConfig":"24"},{"size":57,"mtime":1615785744003,"results":"44","hashOfConfig":"24"},{"size":3950,"mtime":1615783052429,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17hw2yg",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\index.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\reportWebVitals.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\App.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Maincomponent.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\Collect.js",["96","97","98","99","100","101"],"import React, { useCallback } from 'react';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport * as ml5 from 'ml5';\r\nimport Webcam from 'react-webcam';\r\nlet options = {\r\n  inputs: 34,\r\n  outputs: ['label'],\r\n  task: 'classification',\r\n  debug: true,\r\n};\r\n// const brain = ml5.neuralNetwork(options);\r\n/* brain.loadData(\"../testdata.json\", ()=>{\r\n          brain.normalizeData();\r\n \t\tbrain.train({ epochs: 50 }, ()=>{\r\n             console.log'x(\"model trained\");\r\n \t\t\t\t\t\tbrain.save();\r\n         });\r\n });*/\r\nfunction Collect() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [loaded, Setloaded] = useState(false);\r\n  const brain = useRef(null);\r\n  const [poses, Setposes] = useState([]);\r\n  const [swap, Setswap] = useState(true);\r\n  const [facing, Setfacing] = useState(false);\r\n  const [collecting, Setcollecting] = useState(false);\r\n  const [targetLabel, Setlabel] = useState('');\r\n\r\n  const drawRect = (poses, ctx) => {\r\n    const pose = poses[0].pose;\r\n    const skeleton = poses[0].skeleton;\r\n    for (let i = 0; i < pose.keypoints.length; i++) {\r\n      let x = pose.keypoints[i].position.x;\r\n      let y = pose.keypoints[i].position.y;\r\n      ctx.fillStyle = ' #39ff14';\r\n      ctx.beginPath();\r\n      ctx.arc(x, y, 6, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n      ctx.fillStyle = '#fff';\r\n      ctx.beginPath();\r\n      ctx.arc(x, y, 4, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n    }\r\n    for (let j = 0; j < poses[0].skeleton.length; j++) {\r\n      let partA = skeleton[j][0];\r\n      let partB = skeleton[j][1];\r\n      ctx.beginPath();\r\n      ctx.moveTo(partA.position.x, partA.position.y);\r\n      ctx.lineTo(partB.position.x, partB.position.y);\r\n      ctx.strokeStyle = ' #39ff14';\r\n\r\n      ctx.stroke();\r\n    }\r\n  };\r\n  const detection = () => {\r\n    const poseNet = ml5.poseNet(webcamRef.current.video, () => {\r\n      console.log('Modal Loaded');\r\n\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      poseNet.on('pose', (poses) => {\r\n        if (poses.length > 0) {\r\n          Setposes(poses);\r\n        }\r\n      });\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    brain.current = ml5.neuralNetwork(options);\r\n\r\n    detection();\r\n  }, []);\r\n\r\n  if (poses.length > 0) {\r\n    if (collecting) {\r\n      const pose = poses[0].pose;\r\n      let inputs = [];\r\n      for (let i = 0; i < pose.keypoints.length; i++) {\r\n        let x = pose.keypoints[i].position.x;\r\n        let y = pose.keypoints[i].position.y;\r\n        inputs.push(x);\r\n        inputs.push(y);\r\n      }\r\n      let target = {\r\n        label: targetLabel,\r\n      };\r\n      brain.current.addData(inputs, target);\r\n    }\r\n    const ctx = canvasRef.current.getContext('2d');\r\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n    requestAnimationFrame(() => {\r\n      drawRect(poses, ctx);\r\n    });\r\n  }\r\n  const collecttrain = () => {\r\n    setTimeout(() => {\r\n      Setcollecting(true);\r\n      console.log('Collecting');\r\n      setTimeout(() => {\r\n        Setcollecting(false);\r\n        console.log('Stop Collecting');\r\n      }, 20000);\r\n    }, 5000);\r\n  };\r\n  const savedata = () => {\r\n    brain.current.saveData();\r\n  };\r\n  return (\r\n    <div>\r\n      <div className='h-screen overflow-hidden'>\r\n        <Webcam\r\n          ref={webcamRef}\r\n          muted={true}\r\n          style={{\r\n            transform: swap && 'scaleX(-1)',\r\n            position: 'absolute',\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: 'center',\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            transform: swap && 'scaleX(-1)',\r\n            position: 'absolute',\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: 'center',\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n        <input\r\n          type='text'\r\n          name='label'\r\n          className=' border-black border-2'\r\n          onChange={(e) => Setlabel(e.target.value)}\r\n        />\r\n\r\n        <div\r\n          className='inline-block px-3 py-2 rounded-xl cursor-pointer bg-yellow-400 text-lg text-black'\r\n          onClick={() => savedata()}\r\n        >\r\n          Save\r\n        </div>\r\n        <div\r\n          className='inline-block px-3 py-2 rounded-xl cursor-pointer bg-yellow-400 text-lg text-black'\r\n          onClick={() => collecttrain()}\r\n        >\r\n          Train\r\n        </div>\r\n        <p className='text-3xl text-black'>\r\n          {collecting ? ' Collecting ' : 'Not Collecting'}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Collect;\r\n",["102","103"],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\train.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\posnet\\Trainedmodel.js",["104","105","106"],"import React from 'react';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport * as ml5 from 'ml5';\r\nimport Webcam from 'react-webcam';\r\nlet options = {\r\n  inputs: 34,\r\n  outputs: ['label'],\r\n  task: 'classification',\r\n  debug: true,\r\n};\r\n\r\nconst modelInfo = {\r\n  model: './model/finalmodel.json',\r\n  metadata: './model/finalmodel_meta.json',\r\n  weights: './model/finalmodel.weights.bin',\r\n};\r\nfunction Trainedmodel() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [poses, Setposes] = useState([]);\r\n  const [swap, Setswap] = useState(true);\r\n  const [facing, Setfacing] = useState(false);\r\n  const [resultspose, Setresultspose] = useState([]);\r\n  const brain = useRef(null);\r\n  const drawRect = (poses, ctx) => {\r\n    // ctx.drawImage(webcamRef.current.video, 0, 0);\r\n    const pose = poses[0].pose;\r\n    const skeleton = poses[0].skeleton;\r\n    for (let i = 0; i < pose.keypoints.length; i++) {\r\n      let x = pose.keypoints[i].position.x;\r\n      let y = pose.keypoints[i].position.y;\r\n      ctx.fillStyle = ' #39ff14';\r\n      ctx.beginPath();\r\n      ctx.arc(x, y, 6, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n      ctx.fillStyle = '#fff';\r\n      ctx.beginPath();\r\n      ctx.arc(x, y, 4, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n    }\r\n    for (let j = 0; j < poses[0].skeleton.length; j++) {\r\n      let partA = skeleton[j][0];\r\n      let partB = skeleton[j][1];\r\n      ctx.beginPath();\r\n      ctx.moveTo(partA.position.x, partA.position.y);\r\n      ctx.lineTo(partB.position.x, partB.position.y);\r\n      ctx.strokeStyle = ' #39ff14';\r\n\r\n      ctx.stroke();\r\n    }\r\n    // ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n  };\r\n  const detection = () => {\r\n    const poseNet = ml5.poseNet(webcamRef.current.video, () => {\r\n      console.log('Modal Loaded');\r\n      brain.current.load(modelInfo, () => {\r\n        console.log('pose classification ready!');\r\n      });\r\n\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n      poseNet.on('pose', (poses) => {\r\n        if (poses.length > 0) {\r\n          Setposes(poses);\r\n          classifyPose(poses);\r\n        }\r\n      });\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    brain.current = ml5.neuralNetwork(options);\r\n    detection();\r\n  }, []);\r\n  const classifyPose = (poses) => {\r\n    const pose = poses[0].pose;\r\n    let inputs = [];\r\n    for (let i = 0; i < pose.keypoints.length; i++) {\r\n      let x = pose.keypoints[i].position.x;\r\n      let y = pose.keypoints[i].position.y;\r\n      inputs.push(x);\r\n      inputs.push(y);\r\n    }\r\n    brain.current.classify(inputs, (error, results) => {\r\n      // console.log(results[0]);\r\n      if (error) {\r\n        console.log(error);\r\n      } else {\r\n        Setresultspose(results);\r\n        console.log(results[0].label, results[0].confidence);\r\n      }\r\n      //console.log(results[0].confidence);\r\n    });\r\n  };\r\n\r\n  if (poses.length > 0) {\r\n    // classifyPose(poses);\r\n    const ctx = canvasRef.current.getContext('2d');\r\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n    requestAnimationFrame(() => {\r\n      drawRect(poses, ctx);\r\n    });\r\n  }\r\n  const videoConstraints = {\r\n    facingMode: facing ? { exact: 'environment' } : 'user',\r\n  };\r\n  // if (targetLabel != \"\") {\r\n  // \t\t\tconsole.log(targetLabel);\r\n  // \t\t}\r\n  // console.log(collecting);\r\n  return (\r\n    <div>\r\n      <div className='h-screen overflow-hidden'>\r\n        <Webcam\r\n          videoConstraints={videoConstraints}\r\n          ref={webcamRef}\r\n          src='youtube.com/watch?v=t4EFxQDhA8A'\r\n          muted={true}\r\n          style={{\r\n            transform: swap && 'scaleX(-1)',\r\n            position: 'absolute',\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: 'center',\r\n            zindex: 9,\r\n          }}\r\n        />\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            transform: swap && 'scaleX(-1)',\r\n            position: 'absolute',\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: 'center',\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n        {/* <input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"label\"\r\n\t\t\t\t\tclassName=\" border-black border-2\"\r\n\t\t\t\t\tonChange={(e) => Setlabel(e.target.value)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"inline-block px-3 py-2 rounded-xl cursor-pointer bg-yellow-400 text-lg text-black\"\r\n\t\t\t\t\tonClick={() => savedata()}\r\n\t\t\t\t>\r\n\t\t\t\t\tSave\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"inline-block px-3 py-2 rounded-xl cursor-pointer bg-yellow-400 text-lg text-black\"\r\n\t\t\t\t\tonClick={() => collecttrain()}\r\n\t\t\t\t>\r\n\t\t\t\t\tTrain\r\n\t\t\t\t</div> */}\r\n        {/* <div\r\n\t\t\t\t\t\tclassName=\"inline-block absolute bottom-0 right-0 px-3 py-2 rounded-xl cursor-pointer bg-yellow-400 text-lg text-black\"\r\n\t\t\t\t\t\tonClick={() => Setfacing(!facing)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{facing ? \"Front\" : \"Back\"}\r\n\t\t\t\t\t</div> */}\r\n        {resultspose.length > 0 && (\r\n          <div className='text-2xl text-black'>\r\n            {resultspose[0].label}\r\n            {resultspose[0].confidence}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Trainedmodel;\r\n","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\redux\\configureStore.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Header.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Learn.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\ClassifyAll.js",["107"],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\loginButton.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\redux\\poseReducer.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\redux\\authReducer.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Leaderboard.js",["108","109","110"],"import axios from 'axios';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { useEffect, useState } from 'react';\r\nimport winner from '../images/winner.png';\r\n\r\nfunction LeaderBoard() {\r\n  let [arr, setarr] = useState([]);\r\n  let [check, setcheck] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(baseUrl + 'leaderboard')\r\n      .then((response) => {\r\n        var newarr = response.data[0];\r\n        setarr(newarr);\r\n        if (arr.length === 0) {\r\n          setcheck(true);\r\n        } else {\r\n          arr.sort((a, b) => {\r\n            var l1 = a.level;\r\n            var l2 = b.level;\r\n            return l2 - l1;\r\n          });\r\n          console.log('here');\r\n          console.log(arr);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [check]);\r\n\r\n  return (\r\n    <div class='overflow-x-auto'>\r\n      <div class='min-w-screen min-h-screen flex items-center justify-center bg-gray-100 font-sans overflow-hidden'>\r\n        <div class='w-full lg:w-5/6 flex-col justify-center'>\r\n          <div class='flex justify-center p-5'>\r\n            <img class='h-48 w-48' src={winner}></img>\r\n          </div>\r\n          <div class='bg-white shadow-md rounded my-6'>\r\n            <table class='min-w-max w-full table-auto'>\r\n              <thead>\r\n                <tr class='bg-gray-200 text-gray-600 uppercase text-sm leading-normal'>\r\n                  <th class='py-3 px-6 text-left'>User</th>\r\n\r\n                  <th class='py-3 px-6 text-center'>Level</th>\r\n                  <th class='py-3 px-6 text-center'>Tier</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody class='text-gray-600 text-sm font-light'>\r\n                {arr.map((obj) => {\r\n                  return (\r\n                    <tr class='border-b border-gray-200 hover:bg-gray-100'>\r\n                      <td class='py-3 px-6 text-left'>\r\n                        <div class='flex items-center'>\r\n                          <div class='mr-2'>\r\n                            <img\r\n                              class='w-6 h-6 rounded-full'\r\n                              src={obj.imageUrl}\r\n                            />\r\n                          </div>\r\n                          <span>{obj.username}</span>\r\n                        </div>\r\n                      </td>\r\n\r\n                      <td class='py-3 px-6 text-center font-medium'>\r\n                        {obj.level}\r\n                      </td>\r\n                      {obj.level >= 10 && (\r\n                        <td class='py-3 px-6 text-center'>\r\n                          <span class='bg-green-200 text-green-600 py-1 px-3 rounded-full text-xs'>\r\n                            Master\r\n                          </span>\r\n                        </td>\r\n                      )}\r\n                      {obj.level >= 7 && obj.level <= 9 && (\r\n                        <td class='py-3 px-6 text-center'>\r\n                          <span class='bg-purple-200 text-purple-600 py-1 px-3 rounded-full text-xs'>\r\n                            Champion\r\n                          </span>\r\n                        </td>\r\n                      )}\r\n                      {obj.level >= 3 && obj.level <= 6 && (\r\n                        <td class='py-3 px-6 text-center'>\r\n                          <span class='bg-yellow-200 text-yellow-600 py-1 px-3 rounded-full text-xs'>\r\n                            Specialist\r\n                          </span>\r\n                        </td>\r\n                      )}\r\n                      {obj.level < 3 && (\r\n                        <td class='py-3 px-6 text-center'>\r\n                          <span class='bg-red-200 text-red-600 py-1 px-3 rounded-full text-xs'>\r\n                            Newbie\r\n                          </span>\r\n                        </td>\r\n                      )}\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LeaderBoard;\r\n","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Clock.js",["111","112"],"import { useEffect,memo } from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./clock.css\";\r\n\r\nconst Clock = ({ total, pause, onComplete }) => {\r\n\tconst [time, Settime] = useState(total);\r\n\tuseEffect(() => {\r\n\t\tif (time === 0) {\r\n            onComplete();\r\n            return;\r\n        };\r\n\t\tif (pause()) return;\r\n\t\tlet timer = setInterval(() => {\r\n\t\t\tSettime(time - 1);\r\n\t\t\tsetCircleDasharray();\r\n\t\t}, 1000);\r\n\t\treturn () => {\r\n\t\t\tclearInterval(timer);\r\n\t\t};\r\n\t}, [time, pause()]);\r\n\tfunction setCircleDasharray() {\r\n\t\tconst circleDasharray = `${(calculateTimeFraction() * 283).toFixed(0)} 283`;\r\n\t\tdocument\r\n\t\t\t.getElementById(\"base-timer-path-remaining\")\r\n\t\t\t.setAttribute(\"stroke-dasharray\", circleDasharray);\r\n\t}\r\n\tfunction calculateTimeFraction() {\r\n\t\tconst TIME_LIMIT = total;\r\n\t\tlet rawTimeFraction;\r\n\t\tif (time > 1) rawTimeFraction = (time - 1) / TIME_LIMIT;\r\n\t\telse rawTimeFraction = time / TIME_LIMIT;\r\n\t\treturn rawTimeFraction - (1 / TIME_LIMIT) * (1 - rawTimeFraction);\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div class=\"base-timer\">\r\n\t\t\t\t<svg\r\n\t\t\t\t\tclass=\"base-timer__svg\"\r\n\t\t\t\t\tviewBox=\"0 0 100 100\"\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<g class=\"base-timer__circle\">\r\n\t\t\t\t\t\t<circle class=\"base-timer__path-elapsed\" cx=\"50\" cy=\"50\" r=\"45\" />\r\n\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\tid=\"base-timer-path-remaining\"\r\n\t\t\t\t\t\t\tstroke-dasharray=\"283\"\r\n\t\t\t\t\t\t\tclass=\"base-timer__path-remaining #fefefe\"\r\n\t\t\t\t\t\t\td=\"\r\n                                    M 50, 50\r\n                                    m -45, 0\r\n                                    a 45,45 0 1,0 90,0\r\n                                    a 45,45 0 1,0 -90,0\r\n                                    \"\r\n\t\t\t\t\t\t></path>\r\n\t\t\t\t\t</g>\r\n\t\t\t\t</svg>\r\n\t\t\t\t<span className=\"base-timer__label\">{time}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default memo(Clock);\r\n","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Home.js",["113"],"import Matimage from '../images/mat.png';\r\nimport Back from '../images/abstract-wallpaper_23-2148663179.jpg';\r\nimport './home.css';\r\nimport Pose from '../images/yoga-pose-estimation-removebg.png';\r\nimport Login from '../components/loginButton';\r\nimport { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className='fixed w-full h-full'>\r\n        <img src={Back} alt='' className='back' />\r\n        <div className='mat'>\r\n          <img src={Matimage} className='' alt='...' />\r\n        </div>\r\n        <div className='pose '>\r\n          <img src={Pose} className='' alt='...' />\r\n        </div>\r\n        <div className='ml-5 lg:ml-10'>\r\n          <div className='font-jost text-5xl  md:text-5xl  lg:text-7xl text-primary font-bold antialiased tracking-wider mt-48  '>\r\n            Automated\r\n          </div>\r\n          <div className=' relative font-jost text-5xl  md:text-5xl lg:text-7xl text-secondary-dark font-bold antialiased tracking-wider mt-5 '>\r\n            <div className='ellipse'></div> <div className='ellipse1'></div>\r\n            <span className='z-50'>Yoga</span> Instructor\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\redux\\ActionCreator.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\NextButton.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\redux\\ActionTypes.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\shared\\baseUrl.js",[],"C:\\Users\\DELL\\Desktop\\Project\\tfjs-object-detection-eccomerce-local-shops\\client\\src\\components\\Detection.js",[],{"ruleId":"114","severity":1,"message":"115","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":28},{"ruleId":"114","severity":1,"message":"118","line":22,"column":10,"nodeType":"116","messageId":"117","endLine":22,"endColumn":16},{"ruleId":"114","severity":1,"message":"119","line":22,"column":18,"nodeType":"116","messageId":"117","endLine":22,"endColumn":27},{"ruleId":"114","severity":1,"message":"120","line":25,"column":16,"nodeType":"116","messageId":"117","endLine":25,"endColumn":23},{"ruleId":"114","severity":1,"message":"121","line":26,"column":10,"nodeType":"116","messageId":"117","endLine":26,"endColumn":16},{"ruleId":"114","severity":1,"message":"122","line":26,"column":18,"nodeType":"116","messageId":"117","endLine":26,"endColumn":27},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"114","severity":1,"message":"120","line":21,"column":16,"nodeType":"116","messageId":"117","endLine":21,"endColumn":23},{"ruleId":"114","severity":1,"message":"122","line":22,"column":18,"nodeType":"116","messageId":"117","endLine":22,"endColumn":27},{"ruleId":"127","severity":1,"message":"128","line":79,"column":6,"nodeType":"129","endLine":79,"endColumn":8,"suggestions":"130"},{"ruleId":"114","severity":1,"message":"131","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":15},{"ruleId":"127","severity":1,"message":"132","line":31,"column":6,"nodeType":"129","endLine":31,"endColumn":13,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":38,"column":13,"nodeType":"136","endLine":38,"endColumn":49},{"ruleId":"134","severity":1,"message":"135","line":58,"column":29,"nodeType":"136","endLine":61,"endColumn":31},{"ruleId":"127","severity":1,"message":"137","line":20,"column":5,"nodeType":"129","endLine":20,"endColumn":20,"suggestions":"138"},{"ruleId":"127","severity":1,"message":"139","line":20,"column":12,"nodeType":"140","endLine":20,"endColumn":19},{"ruleId":"114","severity":1,"message":"141","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":13},"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'loaded' is assigned a value but never used.","'Setloaded' is assigned a value but never used.","'Setswap' is assigned a value but never used.","'facing' is assigned a value but never used.","'Setfacing' is assigned a value but never used.","no-native-reassign",["142"],"no-negated-in-lhs",["143"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'detection'. Either include it or remove the dependency array.","ArrayExpression",["144"],"'Namaste' is defined but never used.","React Hook useEffect has a missing dependency: 'arr'. Either include it or remove the dependency array.",["145"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'onComplete', 'pause', and 'setCircleDasharray'. Either include them or remove the dependency array. If 'pause' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["146"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'Login' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [detection]",{"range":"153","text":"154"},"Update the dependencies array to be: [arr, check]",{"range":"155","text":"156"},"Update the dependencies array to be: [onComplete, pause, setCircleDasharray, time]",{"range":"157","text":"158"},[2541,2543],"[detection]",[804,811],"[arr, check]",[471,486],"[onComplete, pause, setCircleDasharray, time]"]